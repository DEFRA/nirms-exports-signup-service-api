[concat('<policies>
	<inbound>
		<base />
		<set-header name="x-api-version" exists-action="override">
			<value>@(context.Api.Version)</value>
		</set-header>
		<choose>
			<when condition="@("North Europe".Equals(context.Deployment.Region, StringComparison.OrdinalIgnoreCase))">
				<set-backend-service base-url="', parameters('trade-remos-api-v1-ServiceUrl') ,'" />
			</when>
			<when condition="@("West Europe".Equals(context.Deployment.Region, StringComparison.OrdinalIgnoreCase))">
				<set-backend-service base-url="', parameters('secondaryServiceUrl') ,'" />
			</when>
			<otherwise>
				<set-backend-service base-url="', parameters('trade-remos-api-v1-ServiceUrl') ,'" />
			</otherwise>
		</choose>
		<validate-jwt header-name="Authorization" failed-validation-httpcode="401" failed-validation-error-message="Unauthorized. Access token is missing or invalid." require-expiration-time="true" require-scheme="Bearer" require-signed-tokens="true" clock-skew="900" output-token-variable-name="jwt">
			<openid-config url="', concat('https://login.microsoftonline.com/', subscription().tenantId, '/.well-known/openid-configuration') ,'" />
			<required-claims>
				<claim name="aud">
					<value>@((string)context.Variables["Audience"])</value>
				</claim>
				<claim name="iss">
					<value>https://sts.windows.net/', subscription().tenantId, '/</value>
				</claim>
				<claim name="tid">
					<value>', subscription().tenantId, '</value>
				</claim>
				<claim name="roles" match="any">
					<value>', parameters('roles').roleTradeRemosRead, '</value>
					<value>', parameters('roles').roleTradeRemosUpdate, '</value>
				</claim>
			</required-claims>
		</validate-jwt>
		<authentication-managed-identity resource="', parameters('aspClientId'), '" ignore-error="false" />
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<base />
	</outbound>
	<on-error>
		<base />
	</on-error>
</policies>')]